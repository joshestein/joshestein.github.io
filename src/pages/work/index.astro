---
import Container from "@components/Container.astro";
import { WORK } from "@constants";
import BaseLayout from "@layouts/BaseLayout.astro";
import { dateRange } from "@lib/utils.ts";

import { getCollection, render } from "astro:content";
const collection = (await getCollection("work")).sort((a, b) => {
  if (a.data.dateEnd === "Current" && b.data.dateEnd !== "Current") return -1;
  if (a.data.dateEnd !== "Current" && b.data.dateEnd === "Current") return 1;
  return new Date(b.data.dateStart).valueOf() - new Date(a.data.dateStart).valueOf();
});

const work = await Promise.all(
  collection.map(async (item) => {
    const { Content } = await render(item);
    return { ...item, Content };
  }),
);
---

<BaseLayout title={WORK.TITLE} description={WORK.DESCRIPTION}>
  <Container>
    <div class="space-y-8">
      <h4 class="animate font-semibold text-black dark:text-white">{WORK.TITLE}</h4>
      <ul class="flex flex-col space-y-4">
        {
          // TODO: extract a Work.astro component

          work.map((entry) => (
            <li class="animate">
              <div class="font-semibold text-black dark:text-white">{entry.data.company}</div>
              <div class="text-sm opacity-75">
                {entry.data.role} â€¢ {dateRange(entry.data.dateStart, entry.data.dateEnd)}
              </div>
              <article>
                <entry.Content />
              </article>
            </li>
          ))
        }
      </ul>
    </div>
  </Container>
</BaseLayout>
